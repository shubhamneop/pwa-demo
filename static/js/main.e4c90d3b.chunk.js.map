{"version":3,"sources":["constant/color.js","logo.svg","Components/Header.js","Components/Input.js","Components/Card.js","Components/NumberContainer.js","Screen/StartGame.js","Screen/GameScreen.js","Screen/GameOver.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["style","header","width","height","paddingTop","backgroundColor","color","alignItems","justifyContent","textAlign","headerTitle","Header","title","styles","input","borderBottomColor","borderBottomWidth","marginVertical","Input","props","card","shadowColor","shadowOffset","shadowRadius","shadowOpacity","elevation","padding","borderRadius","boxShadow","Card","children","container","borderWidth","borderColor","Colours","number","fontSize","NumberContainer","screen","flex","inputConatiner","buttonContainer","display","flexDirection","paddingHorizontal","buttondiv","marginBottom","summaryContainer","marginTop","button","border","textDecoration","StartGame","confirmedOutput","useState","enteredValue","setEnteredvalue","confirmed","setConfirmed","selectedNumber","setSelectedNumber","onClick","onStartGame","autoCapitalize","maxLength","onChange","inputText","target","value","replace","chosenNumber","parseInt","isNaN","toast","error","position","POSITION","TOP_RIGHT","generateRandomBetween","min","max","exclude","Math","ceil","floor","rndNum","random","GameScreen","userChoise","currentGuess","setCurrentGuess","rounds","setRounds","currentLow","useRef","currentHigh","onGameOver","useEffect","nextGuessHandler","direction","dark","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","current","nextNumber","currnetRound","bind","margin","Color","GameOver","roundNum","userNumber","onRestart","App","setUserNumber","guessRounds","setGuessRounds","content","selectedNubmer","numofRounds","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e4c90d3b.chunk.js","sourcesContent":["export default {\n  primary: \"#f7287b\",\n  accent: \"#c717fc\",\n  lower: \"#F7DB4F\",\n  greater: \"#E8175D\",\n  restart: \"#99B898\",\n  start: \"#83AF9B\",\n};\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\nimport color from \"../constant/color\";\n\nconst style = {\n  header: {\n    width: \"100%\",\n    height: 90,\n    paddingTop: 36,\n    backgroundColor: color.primary,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n  },\n  headerTitle: {\n    color: \"black\",\n  },\n};\nfunction Header({ title }) {\n  return (\n    <div style={style.header}>\n      <h1 style={style.headerTitle}> {title} </h1>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nconst Input = (props) => {\n  return <input {...props} style={{ ...styles.input, ...props.style }} />;\n};\n\nconst styles = {\n  input: {\n    height: 30,\n    borderBottomColor: \"grey\",\n    borderBottomWidth: 1,\n    marginVertical: 10,\n  },\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Card = (props) => {\n  return <div style={{ ...styles.card, ...props.style }}>{props.children}</div>;\n};\n\nconst styles = {\n  card: {\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 6,\n    shadowOpacity: 0.26,\n    elevation: 7,\n    backgroundColor: \"white\",\n    padding: 20,\n    borderRadius: 10,\n    boxShadow: \"#c8c8e2 1px 2px 2px 3px\",\n  },\n};\n\nexport default Card;\n","import React from \"react\";\nimport Colours from \"../constant/color\";\n\nconst NumberContainer = (props) => {\n  return (\n    <div style={styles.container}>\n      <p style={styles.number}>{props.children}</p>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    borderWidth: 2,\n    borderColor: Colours.accent,\n    padding: 10,\n    borderRadius: 10,\n    marginVertical: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  number: {\n    color: Colours.accent,\n    fontSize: 22,\n  },\n};\n\nexport default NumberContainer;\n","import React, { useState } from \"react\";\nimport Colours from \"../constant/color\";\nimport Input from \"../Components/Input\";\nimport Card from \"../Components/Card\";\nimport NumberContainer from \"../Components/NumberContainer\";\nimport { toast } from \"react-toastify\";\n\nconst StartGame = (props) => {\n  const [enteredValue, setEnteredvalue] = useState(\"\");\n  const [confirmed, setConfirmed] = useState(false);\n  const [selectedNumber, setSelectedNumber] = useState();\n\n  const numberInputHandler = (inputText) => {\n    setEnteredvalue(inputText.target.value.replace(/[^0-9]/g, \"\"));\n  };\n\n  const resetInputHandler = () => {\n    setEnteredvalue(\"\");\n    setConfirmed(false);\n  };\n\n  const confirmInputHandler = () => {\n    const chosenNumber = parseInt(enteredValue);\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      toast.error(`Invalid number Number has to be number between 1 and 99.`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n\n      return;\n    }\n    setConfirmed(true);\n    setSelectedNumber(chosenNumber);\n    setEnteredvalue(\"\");\n  };\n  let confirmedOutput;\n  if (confirmed) {\n    confirmedOutput = (\n      <Card style={styles.summaryContainer}>\n        <h1>You seleted</h1>\n        <NumberContainer> {selectedNumber}</NumberContainer>\n        <button\n          title=\"START GAME\"\n          style={{ ...styles.button, backgroundColor: Colours.start }}\n          color={Colours.start}\n          onClick={() => props.onStartGame(selectedNumber)}\n        >\n          START GAME\n        </button>\n      </Card>\n    );\n  }\n\n  return (\n    <div style={styles.screen}>\n      <h1 style={styles.title}>Start a New Game</h1>\n      <Card style={styles.inputConatiner}>\n        <p>Select a Number</p>\n        <Input\n          style={styles.input}\n          autoCapitalize=\"none\"\n          maxLength={2}\n          onChange={numberInputHandler}\n          value={enteredValue}\n        />\n        <div style={styles.buttonContainer}>\n          <div style={styles.buttondiv}>\n            <button\n              title=\"Reset\"\n              style={{ ...styles.button, backgroundColor: Colours.accent }}\n              onClick={resetInputHandler}\n            >\n              Reset\n            </button>\n          </div>\n          <div style={styles.buttondiv}>\n            <button onClick={confirmInputHandler} style={styles.button}>\n              Confirm\n            </button>\n          </div>\n        </div>\n      </Card>\n      {confirmedOutput}\n    </div>\n  );\n};\n\nconst styles = {\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: \"center\",\n    textAlign: \"center\",\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10,\n  },\n  inputConatiner: {\n    alignItems: \"center\",\n  },\n  buttonContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: \"space-evenly\",\n    paddingHorizontal: 15,\n  },\n  buttondiv: {\n    width: 100,\n  },\n  input: {\n    textAlign: \"center\",\n    marginBottom: \"1em\",\n  },\n  summaryContainer: {\n    marginTop: 20,\n    alignItems: \"center\",\n  },\n  button: {\n    backgroundColor: Colours.primary,\n    border: \"none\",\n    color: \"white\",\n    padding: \"15px 32px\",\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    display: \"inline-block\",\n    fontSize: \"16px\",\n  },\n};\n\nexport default StartGame;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport NumberContainer from \"../Components/NumberContainer\";\nimport Card from \"../Components/Card\";\nimport Colours from \"../constant/color\";\nimport { toast } from \"react-toastify\";\n\nconst generateRandomBetween = (min, max, exclude) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  const rndNum = Math.floor(Math.random() * (max - min)) + min;\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n};\n\nconst GameScreen = (props) => {\n  const [currentGuess, setCurrentGuess] = useState(\n    generateRandomBetween(1, 100, props.userChoise)\n  );\n\n  const [rounds, setRounds] = useState(0);\n\n  const currentLow = useRef(1);\n  const currentHigh = useRef(100);\n  const { userChoise, onGameOver } = props;\n\n  useEffect(() => {\n    if (currentGuess === userChoise) {\n      onGameOver(rounds);\n    }\n  }, [currentGuess, userChoise, onGameOver]);\n\n  const nextGuessHandler = (direction) => {\n    if (\n      (direction === \"lower\" && currentGuess < props.userChoise) ||\n      (direction === \"greater\" && currentGuess > props.userChoise)\n    ) {\n      toast.dark(`Don't lie!, You konw that this is wrong...`, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      return;\n    }\n    if (direction == \"lower\") {\n      currentHigh.current = currentGuess;\n      generateRandomBetween(1);\n    } else {\n      currentLow.current = currentGuess;\n    }\n    const nextNumber = generateRandomBetween(\n      currentLow.current,\n      currentHigh.current,\n      currentGuess\n    );\n    setCurrentGuess(nextNumber);\n    setRounds((currnetRound) => currnetRound + 1);\n  };\n  return (\n    <div style={styles.screen}>\n      <h2>Opponent's Guess</h2>\n      <NumberContainer>{currentGuess}</NumberContainer>\n      <Card style={styles.buttonContainer}>\n        <button\n          title=\"LOWER\"\n          style={{ ...styles.button, backgroundColor: Colours.lower }}\n          onClick={nextGuessHandler.bind(this, \"lower\")}\n        >\n          LOWER\n        </button>\n        <button\n          title=\"GREATER\"\n          style={{ ...styles.button }}\n          onClick={nextGuessHandler.bind(this, \"greater\")}\n        >\n          GREATER\n        </button>\n      </Card>\n    </div>\n  );\n};\n\nconst styles = {\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: \"center\",\n    textAlign: \"center\",\n  },\n  buttonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    marginTop: 20,\n    display: \"flex\",\n  },\n  button: {\n    backgroundColor: Colours.greater /* Green */,\n    border: \"none\",\n    color: \"white\",\n    padding: \"15px 32px\",\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    display: \"inline-block\",\n    fontSize: \"16px\",\n  },\n};\n\nexport default GameScreen;\n","import React from \"react\";\nimport Card from \"../Components/Card\";\nimport Color from \"../constant/color\";\n\nconst GameOver = (props) => {\n  return (\n    <Card style={styles.card}>\n      <div>\n        <h2>The Game is Over!</h2>\n        <h3>Number of rounds: {props.roundNum}</h3>\n        <p>Number was : {props.userNumber}</p>\n        <button\n          title=\"New Game\"\n          style={styles.button}\n          onClick={props.onRestart}\n        >\n          New Game\n        </button>\n      </div>\n    </Card>\n  );\n};\n\nconst styles = {\n  screen: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  card: {\n    padding: 10,\n    margin: 20,\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n  },\n  button: {\n    backgroundColor: Color.restart,\n    border: \"none\",\n    color: \"white\",\n    padding: \"15px 32px\",\n    textAlign: \"center\",\n    textDecoration: \"none\",\n    display: \"inline-block\",\n    fontSize: \"16px\",\n  },\n};\n\nexport default GameOver;\n","import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./Components/Header\";\nimport StartGame from \"./Screen/StartGame\";\nimport GameScreen from \"./Screen/GameScreen\";\nimport GameOver from \"./Screen/GameOver\";\nimport { ToastContainer } from \"react-toastify\";\n\nfunction App() {\n  const [userNumber, setUserNumber] = useState();\n  const [guessRounds, setGuessRounds] = useState(0);\n\n  const configureNewGameHandler = () => {\n    setGuessRounds(0);\n    setUserNumber(null);\n  };\n\n  const startGameHandler = (selectedNubmer) => {\n    setUserNumber(selectedNubmer);\n    setGuessRounds(0);\n  };\n\n  const gameOverHandler = (numofRounds) => {\n    setGuessRounds(numofRounds);\n  };\n  let content = <StartGame onStartGame={startGameHandler} />;\n  if (userNumber && guessRounds <= 0) {\n    content = (\n      <GameScreen userChoise={userNumber} onGameOver={gameOverHandler} />\n    );\n  } else if (guessRounds > 0) {\n    content = (\n      <GameOver\n        roundNum={guessRounds}\n        userNumber={userNumber}\n        onRestart={configureNewGameHandler}\n      />\n    );\n  }\n  return (\n    <>\n      <ToastContainer />\n      <div style={{ flex: \"1\" }}>\n        <Header title=\"Guess A Number\" />\n        {content}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}